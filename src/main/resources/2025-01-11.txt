低代码优势与劣势
优势
    复用现有组件能力,如组件无法满足需求,二次开发受限于低代码编程模型

劣势
    复杂需求对低代码平台灵活性要求较高,会导致低代码平台本身复杂度上升,
    进而学习成本上升,尤其对于开发人员,还不如硬编码

没有银弹
    针对项目选择合适的技术,低代码能满足项目需求(项目成功交付),那低代码是最好的选择
    复杂项目如果需要大量改造低代码,经过多次这种项目,可以沉淀各种组件,能够解决同类型
    项目问题,如果业务模式稳定,一定程度上来说低代码也可行, 但有两个前提: 1.技术能力
    能强 2.同类型项目稳定且收益可观

刚柔并济
    凡事没有绝对,硬编码和低代码各有优劣,针对不同项目采用不同技术路线,如果一种
    方式可以结合两种的技术路线的优点,见招拆招,可以针对项目中的问题切换"招式",
    中庸之道,不要纯粹的低代码也不要全是硬编码,




